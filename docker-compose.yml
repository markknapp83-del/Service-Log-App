# Healthcare Service Log Portal - Production Docker Compose
# HIPAA-compliant production deployment with monitoring and security

version: '3.8'

services:
  # Main application service
  healthcare-portal:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: healthcare-portal-app
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_PATH=/app/database/healthcare.db
      - AUDIT_DB_PATH=/app/database/audit.db
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ENABLE_METRICS=true
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-12}
      - SESSION_TIMEOUT=${SESSION_TIMEOUT:-3600}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
    volumes:
      - healthcare_data:/app/database
      - healthcare_logs:/app/logs
      - healthcare_uploads:/app/uploads
    networks:
      - healthcare_network
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health/basic"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - healthcare-backup

  # Database backup service
  healthcare-backup:
    image: alpine:latest
    container_name: healthcare-backup
    restart: unless-stopped
    volumes:
      - healthcare_data:/data
      - healthcare_backups:/backups
    networks:
      - healthcare_network
    environment:
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        while true; do
          echo 'Starting database backup at $(date)'
          sqlite3 /data/healthcare.db '.backup /backups/healthcare-$(date +%Y%m%d-%H%M%S).db'
          sqlite3 /data/audit.db '.backup /backups/audit-$(date +%Y%m%d-%H%M%S).db' 2>/dev/null || true
          find /backups -name '*.db' -mtime +${BACKUP_RETENTION_DAYS:-30} -delete
          echo 'Backup completed at $(date)'
          sleep ${BACKUP_INTERVAL_HOURS:-6}h
        done
      "

  # Reverse proxy with SSL termination
  nginx:
    image: nginx:alpine
    container_name: healthcare-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - healthcare_ssl:/etc/ssl/certs
      - healthcare_logs:/var/log/nginx
    networks:
      - healthcare_network
    depends_on:
      - healthcare-portal
    security_opt:
      - no-new-privileges:true

  # Log aggregation and monitoring
  healthcare-monitor:
    image: prom/prometheus:latest
    container_name: healthcare-monitor
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - healthcare_monitoring:/prometheus
    networks:
      - healthcare_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'

volumes:
  healthcare_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}
  healthcare_backups:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BACKUP_PATH:-./backups}
  healthcare_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOG_PATH:-./logs}
  healthcare_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${UPLOAD_PATH:-./uploads}
  healthcare_ssl:
    driver: local
  healthcare_monitoring:
    driver: local

networks:
  healthcare_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16